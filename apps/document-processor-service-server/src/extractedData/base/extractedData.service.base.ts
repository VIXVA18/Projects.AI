/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ExtractedData as PrismaExtractedData } from "@prisma/client";

export class ExtractedDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExtractedDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.extractedData.count(args);
  }

  async extractedDataItems<T extends Prisma.ExtractedDataFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExtractedDataFindManyArgs>
  ): Promise<PrismaExtractedData[]> {
    return this.prisma.extractedData.findMany<Prisma.ExtractedDataFindManyArgs>(
      args
    );
  }
  async extractedData<T extends Prisma.ExtractedDataFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExtractedDataFindUniqueArgs>
  ): Promise<PrismaExtractedData | null> {
    return this.prisma.extractedData.findUnique(args);
  }
  async createExtractedData<T extends Prisma.ExtractedDataCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExtractedDataCreateArgs>
  ): Promise<PrismaExtractedData> {
    return this.prisma.extractedData.create<T>(args);
  }
  async updateExtractedData<T extends Prisma.ExtractedDataUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExtractedDataUpdateArgs>
  ): Promise<PrismaExtractedData> {
    return this.prisma.extractedData.update<T>(args);
  }
  async deleteExtractedData<T extends Prisma.ExtractedDataDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExtractedDataDeleteArgs>
  ): Promise<PrismaExtractedData> {
    return this.prisma.extractedData.delete(args);
  }
}
